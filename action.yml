name: 'Setup a Doom Emacs environment'
description: 'Install a specific version of Doom Emacs (and Emacs) for use in your workflow.'
author: 'Henrik Lissner'

inputs:
  version:
    description: 'The version, branch, tag, or SHA of Doom core to install, e.g. "v3.0.0", or "master" for a recent development version.'
    default: ""
  emacs-version:
    description: 'The version of Emacs to install, e.g. "28.1", or "snapshot" for a recent development version.'
    default: "28.1"
  emacsdir:
    description: "TODO"
    default: ".emacs.d"
  doomdir:
    description: "TODO"
    default: ".doom.d"
  auto-sync:
    description: "TODO"
    default: true

runs:
  using: 'composite'
  steps:
    - uses: purcell/setup-emacs@master
      if: runner.os != 'Windows'
      with.version: ${{ inputs.emacs-version }}

    - uses: actions/setup-python@v2
      if: runner.os == 'Windows'
      with:
        python-version: '3.6'
        architecture: 'x64'
    - uses: jcs090218/setup-emacs-windows@master
      if: runner.os == 'Windows'
      with:
        version: ${{ matrix.emacs-version }}

    - uses: actions/checkout@v3.0.2
      with:
        repository: doomemacs/doomemacs
        path: ${{ inputs.emacsdir }}
        ref: ${{ inputs.version }}

    - name: Add bin/doom to PATH
      if: runner.os == 'Windows'
      run: |
        echo "$((Get-Item .).FullName)/${{ inputs.emacsdir }}" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append

    - name: Add bin/doom to PATH
      if: runner.os != 'Windows'
      run: |
        perl -MCwd -le 'print Cwd::abs_path shift' ${{ inputs.emacsdir }} >> $GITHUB_PATH

    - name: Cache packages
      id: cache-packages
      uses: actions/cache@v3
      env:
        hash: ${{ hashFiles('**/packages.el', format('{0}/init.el', inputs.doomdir)) }}
      with:
        path: ${{ inputs.emacsdir }}/.local/straight/repos
        key: build-${{ runner.os }}-${{ inputs.emacs-version }}-${{ env.hash }}
        restore-keys: |
          build-${{ runner.os }}-${{ inputs.emacs-version }}-
          build-${{ runner.os }}-
          build-

    - name: doom sync
      if: inputs.auto-sync
      env.DOOMDIR: ${{ input.doomdir }}
      run: doom sync
